2021-10-19 20:44:54,302:INFO:Initializing predict_model()
2021-10-19 20:44:54,303:INFO:predict_model(estimator=RandomForestClassifier(n_jobs=-1, random_state=595), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 20:44:54,304:INFO:Checking exceptions
2021-10-19 20:44:54,305:INFO:Preloading libraries
2021-10-19 20:44:54,305:ERROR:Pipeline not found. Exception:
2021-10-19 20:44:54,313:ERROR:Traceback (most recent call last):
  File "C:\Users\Pedro\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 8639, in predict_model
    dtypes = prep_pipe.named_steps["dtypes"]
NameError: name 'prep_pipe' is not defined

2021-10-19 20:47:21,271:INFO:Initializing predict_model()
2021-10-19 20:47:21,272:INFO:predict_model(estimator=RandomForestClassifier(n_jobs=-1, random_state=595), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 20:47:21,273:INFO:Checking exceptions
2021-10-19 20:47:21,274:INFO:Preloading libraries
2021-10-19 20:47:21,275:ERROR:Pipeline not found. Exception:
2021-10-19 20:47:21,286:ERROR:Traceback (most recent call last):
  File "C:\Users\Pedro\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 8639, in predict_model
    dtypes = prep_pipe.named_steps["dtypes"]
NameError: name 'prep_pipe' is not defined

2021-10-19 22:48:53,225:INFO:Initializing load_model()
2021-10-19 22:48:53,226:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:48:54,804:INFO:Initializing predict_model()
2021-10-19 22:48:54,804:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:48:54,808:INFO:Checking exceptions
2021-10-19 22:48:54,808:INFO:Preloading libraries
2021-10-19 22:49:04,285:INFO:Initializing predict_model()
2021-10-19 22:49:04,285:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:49:04,289:INFO:Checking exceptions
2021-10-19 22:49:04,289:INFO:Preloading libraries
2021-10-19 22:50:31,092:INFO:Initializing load_model()
2021-10-19 22:50:31,093:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:50:31,162:INFO:Initializing predict_model()
2021-10-19 22:50:31,163:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:50:31,167:INFO:Checking exceptions
2021-10-19 22:50:31,168:INFO:Preloading libraries
2021-10-19 22:50:32,571:INFO:Initializing predict_model()
2021-10-19 22:50:32,572:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:50:32,575:INFO:Checking exceptions
2021-10-19 22:50:32,576:INFO:Preloading libraries
2021-10-19 22:51:23,584:INFO:Initializing load_model()
2021-10-19 22:51:23,584:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:51:45,115:INFO:Initializing load_model()
2021-10-19 22:51:45,116:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:52:10,034:INFO:Initializing load_model()
2021-10-19 22:52:10,034:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:52:31,552:INFO:Initializing load_model()
2021-10-19 22:52:31,553:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:53:30,442:INFO:Initializing load_model()
2021-10-19 22:53:30,443:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:53:30,511:INFO:Initializing predict_model()
2021-10-19 22:53:30,511:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:53:30,515:INFO:Checking exceptions
2021-10-19 22:53:30,515:INFO:Preloading libraries
2021-10-19 22:53:31,935:INFO:Initializing predict_model()
2021-10-19 22:53:31,935:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:53:31,939:INFO:Checking exceptions
2021-10-19 22:53:31,940:INFO:Preloading libraries
2021-10-19 22:54:15,228:INFO:Initializing load_model()
2021-10-19 22:54:15,228:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:54:53,178:INFO:Initializing load_model()
2021-10-19 22:54:53,178:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:56:52,591:INFO:Initializing load_model()
2021-10-19 22:56:52,592:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:57:45,222:INFO:Initializing load_model()
2021-10-19 22:57:45,222:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:58:34,101:INFO:Initializing load_model()
2021-10-19 22:58:34,101:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:59:09,597:INFO:Initializing load_model()
2021-10-19 22:59:09,598:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:59:09,673:INFO:Initializing predict_model()
2021-10-19 22:59:09,673:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:59:09,677:INFO:Checking exceptions
2021-10-19 22:59:09,677:INFO:Preloading libraries
2021-10-19 22:59:11,301:INFO:Initializing predict_model()
2021-10-19 22:59:11,302:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:59:11,305:INFO:Checking exceptions
2021-10-19 22:59:11,306:INFO:Preloading libraries
2021-10-19 22:59:56,039:INFO:Initializing load_model()
2021-10-19 22:59:56,040:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 22:59:56,111:INFO:Initializing predict_model()
2021-10-19 22:59:56,112:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:59:56,115:INFO:Checking exceptions
2021-10-19 22:59:56,116:INFO:Preloading libraries
2021-10-19 22:59:57,759:INFO:Initializing predict_model()
2021-10-19 22:59:57,760:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 22:59:57,763:INFO:Checking exceptions
2021-10-19 22:59:57,763:INFO:Preloading libraries
2021-10-19 23:00:40,205:INFO:Initializing load_model()
2021-10-19 23:00:40,206:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:00:40,280:INFO:Initializing predict_model()
2021-10-19 23:00:40,281:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:00:40,284:INFO:Checking exceptions
2021-10-19 23:00:40,284:INFO:Preloading libraries
2021-10-19 23:00:41,891:INFO:Initializing predict_model()
2021-10-19 23:00:41,891:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:00:41,895:INFO:Checking exceptions
2021-10-19 23:00:41,895:INFO:Preloading libraries
2021-10-19 23:01:02,650:INFO:Initializing load_model()
2021-10-19 23:01:02,651:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:01:02,721:INFO:Initializing predict_model()
2021-10-19 23:01:02,722:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:01:02,725:INFO:Checking exceptions
2021-10-19 23:01:02,725:INFO:Preloading libraries
2021-10-19 23:01:04,319:INFO:Initializing predict_model()
2021-10-19 23:01:04,320:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:01:04,323:INFO:Checking exceptions
2021-10-19 23:01:04,324:INFO:Preloading libraries
2021-10-19 23:01:31,299:INFO:Initializing load_model()
2021-10-19 23:01:31,299:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:01:31,369:INFO:Initializing predict_model()
2021-10-19 23:01:31,370:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:01:31,374:INFO:Checking exceptions
2021-10-19 23:01:31,374:INFO:Preloading libraries
2021-10-19 23:01:33,081:INFO:Initializing predict_model()
2021-10-19 23:01:33,081:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:01:33,083:INFO:Checking exceptions
2021-10-19 23:01:33,084:INFO:Preloading libraries
2021-10-19 23:02:09,192:INFO:Initializing load_model()
2021-10-19 23:02:09,192:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:02:09,286:INFO:Initializing predict_model()
2021-10-19 23:02:09,287:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:02:09,290:INFO:Checking exceptions
2021-10-19 23:02:09,291:INFO:Preloading libraries
2021-10-19 23:02:10,981:INFO:Initializing predict_model()
2021-10-19 23:02:10,981:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:02:10,984:INFO:Checking exceptions
2021-10-19 23:02:10,986:INFO:Preloading libraries
2021-10-19 23:02:54,273:INFO:Initializing load_model()
2021-10-19 23:02:54,273:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:02:54,344:INFO:Initializing predict_model()
2021-10-19 23:02:54,345:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:02:54,348:INFO:Checking exceptions
2021-10-19 23:02:54,348:INFO:Preloading libraries
2021-10-19 23:02:55,982:INFO:Initializing predict_model()
2021-10-19 23:02:55,983:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:02:55,986:INFO:Checking exceptions
2021-10-19 23:02:55,987:INFO:Preloading libraries
2021-10-19 23:03:34,024:INFO:Initializing load_model()
2021-10-19 23:03:34,024:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:03:34,095:INFO:Initializing predict_model()
2021-10-19 23:03:34,095:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:03:34,098:INFO:Checking exceptions
2021-10-19 23:03:34,099:INFO:Preloading libraries
2021-10-19 23:03:35,713:INFO:Initializing predict_model()
2021-10-19 23:03:35,714:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:03:35,718:INFO:Checking exceptions
2021-10-19 23:03:35,719:INFO:Preloading libraries
2021-10-19 23:03:59,124:INFO:Initializing load_model()
2021-10-19 23:03:59,125:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:03:59,195:INFO:Initializing predict_model()
2021-10-19 23:03:59,196:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:03:59,203:INFO:Checking exceptions
2021-10-19 23:03:59,203:INFO:Preloading libraries
2021-10-19 23:04:00,791:INFO:Initializing predict_model()
2021-10-19 23:04:00,792:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:04:00,795:INFO:Checking exceptions
2021-10-19 23:04:00,795:INFO:Preloading libraries
2021-10-19 23:04:22,867:INFO:Initializing load_model()
2021-10-19 23:04:22,867:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:04:22,941:INFO:Initializing predict_model()
2021-10-19 23:04:22,942:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:04:22,946:INFO:Checking exceptions
2021-10-19 23:04:22,946:INFO:Preloading libraries
2021-10-19 23:04:24,569:INFO:Initializing predict_model()
2021-10-19 23:04:24,570:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:04:24,572:INFO:Checking exceptions
2021-10-19 23:04:24,573:INFO:Preloading libraries
2021-10-19 23:04:51,046:INFO:Initializing load_model()
2021-10-19 23:04:51,047:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:04:51,116:INFO:Initializing predict_model()
2021-10-19 23:04:51,117:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:04:51,120:INFO:Checking exceptions
2021-10-19 23:04:51,120:INFO:Preloading libraries
2021-10-19 23:04:52,723:INFO:Initializing predict_model()
2021-10-19 23:04:52,724:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:04:52,729:INFO:Checking exceptions
2021-10-19 23:04:52,729:INFO:Preloading libraries
2021-10-19 23:05:33,501:INFO:Initializing load_model()
2021-10-19 23:05:33,502:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:05:33,575:INFO:Initializing predict_model()
2021-10-19 23:05:33,576:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:05:33,579:INFO:Checking exceptions
2021-10-19 23:05:33,580:INFO:Preloading libraries
2021-10-19 23:05:35,179:INFO:Initializing predict_model()
2021-10-19 23:05:35,180:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:05:35,183:INFO:Checking exceptions
2021-10-19 23:05:35,183:INFO:Preloading libraries
2021-10-19 23:05:53,634:INFO:Initializing load_model()
2021-10-19 23:05:53,634:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:05:53,708:INFO:Initializing predict_model()
2021-10-19 23:05:53,709:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:05:53,712:INFO:Checking exceptions
2021-10-19 23:05:53,713:INFO:Preloading libraries
2021-10-19 23:05:55,329:INFO:Initializing predict_model()
2021-10-19 23:05:55,330:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:05:55,334:INFO:Checking exceptions
2021-10-19 23:05:55,335:INFO:Preloading libraries
2021-10-19 23:10:57,603:INFO:Initializing load_model()
2021-10-19 23:10:57,604:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:10:57,674:INFO:Initializing predict_model()
2021-10-19 23:10:57,675:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:10:57,678:INFO:Checking exceptions
2021-10-19 23:10:57,679:INFO:Preloading libraries
2021-10-19 23:10:59,330:INFO:Initializing predict_model()
2021-10-19 23:10:59,331:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:10:59,334:INFO:Checking exceptions
2021-10-19 23:10:59,335:INFO:Preloading libraries
2021-10-19 23:11:20,226:INFO:Initializing predict_model()
2021-10-19 23:11:20,227:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:11:20,230:INFO:Checking exceptions
2021-10-19 23:11:20,231:INFO:Preloading libraries
2021-10-19 23:11:20,563:INFO:Initializing predict_model()
2021-10-19 23:11:20,563:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:11:20,566:INFO:Checking exceptions
2021-10-19 23:11:20,567:INFO:Preloading libraries
2021-10-19 23:11:23,446:INFO:Initializing predict_model()
2021-10-19 23:11:23,447:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:11:23,450:INFO:Checking exceptions
2021-10-19 23:11:23,451:INFO:Preloading libraries
2021-10-19 23:11:35,125:INFO:Initializing predict_model()
2021-10-19 23:11:35,126:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:11:35,133:INFO:Checking exceptions
2021-10-19 23:11:35,134:INFO:Preloading libraries
2021-10-19 23:13:07,403:INFO:Initializing load_model()
2021-10-19 23:13:07,403:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:13:07,471:INFO:Initializing predict_model()
2021-10-19 23:13:07,471:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:13:07,474:INFO:Checking exceptions
2021-10-19 23:13:07,475:INFO:Preloading libraries
2021-10-19 23:13:09,058:INFO:Initializing predict_model()
2021-10-19 23:13:09,058:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:13:09,062:INFO:Checking exceptions
2021-10-19 23:13:09,062:INFO:Preloading libraries
2021-10-19 23:13:25,319:INFO:Initializing predict_model()
2021-10-19 23:13:25,320:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:13:25,323:INFO:Checking exceptions
2021-10-19 23:13:25,323:INFO:Preloading libraries
2021-10-19 23:13:33,725:INFO:Initializing predict_model()
2021-10-19 23:13:33,725:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:13:33,728:INFO:Checking exceptions
2021-10-19 23:13:33,728:INFO:Preloading libraries
2021-10-19 23:13:34,144:INFO:Initializing predict_model()
2021-10-19 23:13:34,144:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:13:34,148:INFO:Checking exceptions
2021-10-19 23:13:34,149:INFO:Preloading libraries
2021-10-19 23:13:40,227:INFO:Initializing predict_model()
2021-10-19 23:13:40,228:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:13:40,231:INFO:Checking exceptions
2021-10-19 23:13:40,231:INFO:Preloading libraries
2021-10-19 23:16:18,567:INFO:Initializing load_model()
2021-10-19 23:16:18,568:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:16:18,639:INFO:Initializing predict_model()
2021-10-19 23:16:18,639:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:16:18,642:INFO:Checking exceptions
2021-10-19 23:16:18,643:INFO:Preloading libraries
2021-10-19 23:16:20,268:INFO:Initializing predict_model()
2021-10-19 23:16:20,269:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:16:20,272:INFO:Checking exceptions
2021-10-19 23:16:20,272:INFO:Preloading libraries
2021-10-19 23:19:14,885:INFO:Initializing predict_model()
2021-10-19 23:19:14,886:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:19:14,890:INFO:Checking exceptions
2021-10-19 23:19:14,890:INFO:Preloading libraries
2021-10-19 23:19:47,934:INFO:Initializing predict_model()
2021-10-19 23:19:47,935:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:19:47,938:INFO:Checking exceptions
2021-10-19 23:19:47,938:INFO:Preloading libraries
2021-10-19 23:19:48,273:INFO:Initializing predict_model()
2021-10-19 23:19:48,273:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:19:48,276:INFO:Checking exceptions
2021-10-19 23:19:48,277:INFO:Preloading libraries
2021-10-19 23:19:50,213:INFO:Initializing predict_model()
2021-10-19 23:19:50,214:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:19:50,217:INFO:Checking exceptions
2021-10-19 23:19:50,218:INFO:Preloading libraries
2021-10-19 23:19:58,079:INFO:Initializing predict_model()
2021-10-19 23:19:58,086:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:19:58,089:INFO:Checking exceptions
2021-10-19 23:19:58,090:INFO:Preloading libraries
2021-10-19 23:20:06,293:INFO:Initializing predict_model()
2021-10-19 23:20:06,293:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:20:06,296:INFO:Checking exceptions
2021-10-19 23:20:06,297:INFO:Preloading libraries
2021-10-19 23:20:06,647:INFO:Initializing predict_model()
2021-10-19 23:20:06,647:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=6979)]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:20:06,650:INFO:Checking exceptions
2021-10-19 23:20:06,651:INFO:Preloading libraries
2021-10-19 23:47:07,796:INFO:Initializing load_model()
2021-10-19 23:47:07,797:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:47:08,556:INFO:Initializing load_model()
2021-10-19 23:47:08,556:INFO:load_model(model_name=hdp_rf_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:47:29,011:INFO:Initializing load_model()
2021-10-19 23:47:29,012:INFO:load_model(model_name=hdp_model_20211019, platform=None, authentication=None, verbose=True)
2021-10-19 23:47:33,353:INFO:Initializing predict_model()
2021-10-19 23:47:33,354:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostClassifier object at 0x00000244AEF67F70>]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:47:33,357:INFO:Checking exceptions
2021-10-19 23:47:33,358:INFO:Preloading libraries
2021-10-19 23:48:35,924:INFO:PyCaret Supervised Module
2021-10-19 23:48:35,924:INFO:ML Usecase: classification
2021-10-19 23:48:35,924:INFO:version 2.3.4
2021-10-19 23:48:35,924:INFO:Initializing setup()
2021-10-19 23:48:35,924:INFO:setup(target=HeartDisease, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-10-19 23:48:35,924:INFO:Checking environment
2021-10-19 23:48:35,924:INFO:python_version: 3.8.8
2021-10-19 23:48:35,924:INFO:python_build: ('default', 'Apr 13 2021 15:08:03')
2021-10-19 23:48:35,924:INFO:machine: AMD64
2021-10-19 23:48:35,925:INFO:platform: Windows-10-10.0.19041-SP0
2021-10-19 23:48:35,925:INFO:Memory: svmem(total=8555454464, available=3710504960, percent=56.6, used=4844949504, free=3710504960)
2021-10-19 23:48:35,925:INFO:Physical Core: 4
2021-10-19 23:48:35,925:INFO:Logical Core: 8
2021-10-19 23:48:35,925:INFO:Checking libraries
2021-10-19 23:48:35,925:INFO:pd==1.2.4
2021-10-19 23:48:35,925:INFO:numpy==1.19.5
2021-10-19 23:48:35,925:INFO:sklearn==0.23.2
2021-10-19 23:48:35,925:INFO:lightgbm==3.3.0
2021-10-19 23:48:35,948:INFO:catboost==1.0.0
2021-10-19 23:48:35,990:INFO:xgboost==1.5.0
2021-10-19 23:48:36,507:INFO:mlflow==1.20.2
2021-10-19 23:48:36,508:INFO:Checking Exceptions
2021-10-19 23:48:36,508:INFO:Declaring global variables
2021-10-19 23:48:36,508:INFO:USI: 50e9
2021-10-19 23:48:36,508:INFO:pycaret_globals: {'fold_generator', 'pycaret_globals', 'display_container', 'y_test', 'X_test', 'y', 'imputation_regressor', 'USI', 'n_jobs_param', 'imputation_classifier', 'fold_groups_param_full', '_available_plots', 'fold_shuffle_param', 'y_train', 'transform_target_method_param', 'seed', 'data_before_preprocess', 'logging_param', 'X', '_all_metrics', 'stratify_param', 'gpu_param', 'master_model_container', '_ml_usecase', '_internal_pipeline', 'prep_pipe', 'fold_param', 'exp_name_log', '_all_models', 'fix_imbalance_method_param', 'transform_target_param', '_all_models_internal', 'experiment__', 'html_param', 'create_model_container', 'log_plots_param', 'fix_imbalance_param', 'fold_groups_param', '_gpu_n_jobs_param', 'target_param', 'X_train', 'iterative_imputation_iters_param'}
2021-10-19 23:48:36,508:INFO:Preparing display monitor
2021-10-19 23:48:36,508:INFO:Preparing display monitor
2021-10-19 23:48:36,522:INFO:Importing libraries
2021-10-19 23:48:36,522:INFO:Copying data for preprocessing
2021-10-19 23:48:36,530:INFO:Declaring preprocessing parameters
2021-10-19 23:48:36,532:INFO:Creating preprocessing pipeline
2021-10-19 23:48:36,540:INFO:Preprocessing pipeline created successfully
2021-10-19 23:48:36,540:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-10-19 23:48:36,540:INFO:Creating global containers
2021-10-19 23:48:36,542:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-10-19 23:48:55,570:INFO:Creating grid variables
2021-10-19 23:48:55,594:INFO:create_model_container: 0
2021-10-19 23:48:55,594:INFO:master_model_container: 0
2021-10-19 23:48:55,594:INFO:display_container: 1
2021-10-19 23:48:55,600:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-10-19 23:48:55,600:INFO:setup() succesfully completed......................................
2021-10-19 23:49:14,178:INFO:Initializing compare_models()
2021-10-19 23:49:14,179:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-10-19 23:49:14,179:INFO:Checking exceptions
2021-10-19 23:49:14,180:INFO:Preparing display monitor
2021-10-19 23:49:14,181:INFO:Preparing display monitor
2021-10-19 23:49:14,223:INFO:Initializing Logistic Regression
2021-10-19 23:49:14,223:INFO:Total runtime is 0.0 minutes
2021-10-19 23:49:14,233:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:14,234:INFO:Initializing create_model()
2021-10-19 23:49:14,235:INFO:create_model(estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:14,235:INFO:Checking exceptions
2021-10-19 23:49:14,235:INFO:Importing libraries
2021-10-19 23:49:14,235:INFO:Copying training dataset
2021-10-19 23:49:14,238:INFO:Defining folds
2021-10-19 23:49:14,238:INFO:Declaring metric variables
2021-10-19 23:49:14,256:INFO:Importing untrained model
2021-10-19 23:49:14,267:INFO:Logistic Regression Imported succesfully
2021-10-19 23:49:14,292:INFO:Starting cross validation
2021-10-19 23:49:14,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:19,064:INFO:Calculating mean and std
2021-10-19 23:49:19,065:INFO:Creating metrics dataframe
2021-10-19 23:49:19,070:INFO:Uploading results into container
2021-10-19 23:49:19,071:INFO:Uploading model into container now
2021-10-19 23:49:19,071:INFO:create_model_container: 1
2021-10-19 23:49:19,071:INFO:master_model_container: 1
2021-10-19 23:49:19,071:INFO:display_container: 2
2021-10-19 23:49:19,071:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7559, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2021-10-19 23:49:19,071:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:19,301:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:19,301:INFO:Creating metrics dataframe
2021-10-19 23:49:19,323:INFO:Initializing K Neighbors Classifier
2021-10-19 23:49:19,323:INFO:Total runtime is 0.08499626715977987 minutes
2021-10-19 23:49:19,333:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:19,334:INFO:Initializing create_model()
2021-10-19 23:49:19,334:INFO:create_model(estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:19,334:INFO:Checking exceptions
2021-10-19 23:49:19,334:INFO:Importing libraries
2021-10-19 23:49:19,334:INFO:Copying training dataset
2021-10-19 23:49:19,335:INFO:Defining folds
2021-10-19 23:49:19,335:INFO:Declaring metric variables
2021-10-19 23:49:19,344:INFO:Importing untrained model
2021-10-19 23:49:19,353:INFO:K Neighbors Classifier Imported succesfully
2021-10-19 23:49:19,371:INFO:Starting cross validation
2021-10-19 23:49:19,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:19,481:INFO:Calculating mean and std
2021-10-19 23:49:19,482:INFO:Creating metrics dataframe
2021-10-19 23:49:19,487:INFO:Uploading results into container
2021-10-19 23:49:19,487:INFO:Uploading model into container now
2021-10-19 23:49:19,487:INFO:create_model_container: 2
2021-10-19 23:49:19,487:INFO:master_model_container: 2
2021-10-19 23:49:19,487:INFO:display_container: 2
2021-10-19 23:49:19,488:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2021-10-19 23:49:19,488:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:19,613:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:19,613:INFO:Creating metrics dataframe
2021-10-19 23:49:19,634:INFO:Initializing Naive Bayes
2021-10-19 23:49:19,634:INFO:Total runtime is 0.09017641146977742 minutes
2021-10-19 23:49:19,643:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:19,643:INFO:Initializing create_model()
2021-10-19 23:49:19,643:INFO:create_model(estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:19,643:INFO:Checking exceptions
2021-10-19 23:49:19,644:INFO:Importing libraries
2021-10-19 23:49:19,644:INFO:Copying training dataset
2021-10-19 23:49:19,645:INFO:Defining folds
2021-10-19 23:49:19,645:INFO:Declaring metric variables
2021-10-19 23:49:19,654:INFO:Importing untrained model
2021-10-19 23:49:19,661:INFO:Naive Bayes Imported succesfully
2021-10-19 23:49:19,678:INFO:Starting cross validation
2021-10-19 23:49:19,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:19,739:INFO:Calculating mean and std
2021-10-19 23:49:19,740:INFO:Creating metrics dataframe
2021-10-19 23:49:19,745:INFO:Uploading results into container
2021-10-19 23:49:19,745:INFO:Uploading model into container now
2021-10-19 23:49:19,745:INFO:create_model_container: 3
2021-10-19 23:49:19,745:INFO:master_model_container: 3
2021-10-19 23:49:19,745:INFO:display_container: 2
2021-10-19 23:49:19,745:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2021-10-19 23:49:19,745:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:19,873:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:19,873:INFO:Creating metrics dataframe
2021-10-19 23:49:19,894:INFO:Initializing Decision Tree Classifier
2021-10-19 23:49:19,894:INFO:Total runtime is 0.0945237636566162 minutes
2021-10-19 23:49:19,903:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:19,903:INFO:Initializing create_model()
2021-10-19 23:49:19,903:INFO:create_model(estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:19,903:INFO:Checking exceptions
2021-10-19 23:49:19,903:INFO:Importing libraries
2021-10-19 23:49:19,903:INFO:Copying training dataset
2021-10-19 23:49:19,904:INFO:Defining folds
2021-10-19 23:49:19,904:INFO:Declaring metric variables
2021-10-19 23:49:19,912:INFO:Importing untrained model
2021-10-19 23:49:19,921:INFO:Decision Tree Classifier Imported succesfully
2021-10-19 23:49:19,937:INFO:Starting cross validation
2021-10-19 23:49:19,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:19,992:INFO:Calculating mean and std
2021-10-19 23:49:19,993:INFO:Creating metrics dataframe
2021-10-19 23:49:19,997:INFO:Uploading results into container
2021-10-19 23:49:19,998:INFO:Uploading model into container now
2021-10-19 23:49:19,998:INFO:create_model_container: 4
2021-10-19 23:49:19,998:INFO:master_model_container: 4
2021-10-19 23:49:19,998:INFO:display_container: 2
2021-10-19 23:49:19,998:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=7559, splitter='best')
2021-10-19 23:49:19,999:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:20,125:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:20,125:INFO:Creating metrics dataframe
2021-10-19 23:49:20,146:INFO:Initializing SVM - Linear Kernel
2021-10-19 23:49:20,147:INFO:Total runtime is 0.09872081677118937 minutes
2021-10-19 23:49:20,156:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:20,156:INFO:Initializing create_model()
2021-10-19 23:49:20,156:INFO:create_model(estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:20,156:INFO:Checking exceptions
2021-10-19 23:49:20,156:INFO:Importing libraries
2021-10-19 23:49:20,156:INFO:Copying training dataset
2021-10-19 23:49:20,157:INFO:Defining folds
2021-10-19 23:49:20,157:INFO:Declaring metric variables
2021-10-19 23:49:20,165:INFO:Importing untrained model
2021-10-19 23:49:20,174:INFO:SVM - Linear Kernel Imported succesfully
2021-10-19 23:49:20,190:INFO:Starting cross validation
2021-10-19 23:49:20,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:20,257:INFO:Calculating mean and std
2021-10-19 23:49:20,259:INFO:Creating metrics dataframe
2021-10-19 23:49:20,264:INFO:Uploading results into container
2021-10-19 23:49:20,264:INFO:Uploading model into container now
2021-10-19 23:49:20,264:INFO:create_model_container: 5
2021-10-19 23:49:20,264:INFO:master_model_container: 5
2021-10-19 23:49:20,265:INFO:display_container: 2
2021-10-19 23:49:20,265:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7559, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2021-10-19 23:49:20,265:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:20,397:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:20,398:INFO:Creating metrics dataframe
2021-10-19 23:49:20,421:INFO:Initializing Ridge Classifier
2021-10-19 23:49:20,421:INFO:Total runtime is 0.10330132643381754 minutes
2021-10-19 23:49:20,430:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:20,430:INFO:Initializing create_model()
2021-10-19 23:49:20,430:INFO:create_model(estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:20,430:INFO:Checking exceptions
2021-10-19 23:49:20,431:INFO:Importing libraries
2021-10-19 23:49:20,431:INFO:Copying training dataset
2021-10-19 23:49:20,431:INFO:Defining folds
2021-10-19 23:49:20,431:INFO:Declaring metric variables
2021-10-19 23:49:20,440:INFO:Importing untrained model
2021-10-19 23:49:20,448:INFO:Ridge Classifier Imported succesfully
2021-10-19 23:49:20,464:INFO:Starting cross validation
2021-10-19 23:49:20,465:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:20,509:INFO:Calculating mean and std
2021-10-19 23:49:20,510:INFO:Creating metrics dataframe
2021-10-19 23:49:20,514:INFO:Uploading results into container
2021-10-19 23:49:20,514:INFO:Uploading model into container now
2021-10-19 23:49:20,514:INFO:create_model_container: 6
2021-10-19 23:49:20,515:INFO:master_model_container: 6
2021-10-19 23:49:20,515:INFO:display_container: 2
2021-10-19 23:49:20,515:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=7559,
                solver='auto', tol=0.001)
2021-10-19 23:49:20,515:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:20,645:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:20,645:INFO:Creating metrics dataframe
2021-10-19 23:49:20,667:INFO:Initializing Random Forest Classifier
2021-10-19 23:49:20,667:INFO:Total runtime is 0.10740191141764321 minutes
2021-10-19 23:49:20,676:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:20,676:INFO:Initializing create_model()
2021-10-19 23:49:20,677:INFO:create_model(estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:20,677:INFO:Checking exceptions
2021-10-19 23:49:20,677:INFO:Importing libraries
2021-10-19 23:49:20,677:INFO:Copying training dataset
2021-10-19 23:49:20,678:INFO:Defining folds
2021-10-19 23:49:20,678:INFO:Declaring metric variables
2021-10-19 23:49:20,685:INFO:Importing untrained model
2021-10-19 23:49:20,694:INFO:Random Forest Classifier Imported succesfully
2021-10-19 23:49:20,710:INFO:Starting cross validation
2021-10-19 23:49:20,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:21,597:INFO:Calculating mean and std
2021-10-19 23:49:21,598:INFO:Creating metrics dataframe
2021-10-19 23:49:21,603:INFO:Uploading results into container
2021-10-19 23:49:21,603:INFO:Uploading model into container now
2021-10-19 23:49:21,603:INFO:create_model_container: 7
2021-10-19 23:49:21,603:INFO:master_model_container: 7
2021-10-19 23:49:21,603:INFO:display_container: 2
2021-10-19 23:49:21,604:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=7559, verbose=0,
                       warm_start=False)
2021-10-19 23:49:21,604:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:21,730:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:21,730:INFO:Creating metrics dataframe
2021-10-19 23:49:21,753:INFO:Initializing Quadratic Discriminant Analysis
2021-10-19 23:49:21,753:INFO:Total runtime is 0.12550411621729532 minutes
2021-10-19 23:49:21,761:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:21,762:INFO:Initializing create_model()
2021-10-19 23:49:21,762:INFO:create_model(estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:21,762:INFO:Checking exceptions
2021-10-19 23:49:21,762:INFO:Importing libraries
2021-10-19 23:49:21,762:INFO:Copying training dataset
2021-10-19 23:49:21,763:INFO:Defining folds
2021-10-19 23:49:21,763:INFO:Declaring metric variables
2021-10-19 23:49:21,771:INFO:Importing untrained model
2021-10-19 23:49:21,779:INFO:Quadratic Discriminant Analysis Imported succesfully
2021-10-19 23:49:21,794:INFO:Starting cross validation
2021-10-19 23:49:21,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:21,861:INFO:Calculating mean and std
2021-10-19 23:49:21,862:INFO:Creating metrics dataframe
2021-10-19 23:49:21,866:INFO:Uploading results into container
2021-10-19 23:49:21,867:INFO:Uploading model into container now
2021-10-19 23:49:21,867:INFO:create_model_container: 8
2021-10-19 23:49:21,867:INFO:master_model_container: 8
2021-10-19 23:49:21,867:INFO:display_container: 2
2021-10-19 23:49:21,867:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2021-10-19 23:49:21,867:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:22,027:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:22,027:INFO:Creating metrics dataframe
2021-10-19 23:49:22,054:INFO:Initializing Ada Boost Classifier
2021-10-19 23:49:22,054:INFO:Total runtime is 0.1305126110712687 minutes
2021-10-19 23:49:22,064:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:22,064:INFO:Initializing create_model()
2021-10-19 23:49:22,064:INFO:create_model(estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:22,064:INFO:Checking exceptions
2021-10-19 23:49:22,064:INFO:Importing libraries
2021-10-19 23:49:22,064:INFO:Copying training dataset
2021-10-19 23:49:22,065:INFO:Defining folds
2021-10-19 23:49:22,066:INFO:Declaring metric variables
2021-10-19 23:49:22,075:INFO:Importing untrained model
2021-10-19 23:49:22,090:INFO:Ada Boost Classifier Imported succesfully
2021-10-19 23:49:22,113:INFO:Starting cross validation
2021-10-19 23:49:22,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:22,477:INFO:Calculating mean and std
2021-10-19 23:49:22,478:INFO:Creating metrics dataframe
2021-10-19 23:49:22,483:INFO:Uploading results into container
2021-10-19 23:49:22,483:INFO:Uploading model into container now
2021-10-19 23:49:22,483:INFO:create_model_container: 9
2021-10-19 23:49:22,483:INFO:master_model_container: 9
2021-10-19 23:49:22,483:INFO:display_container: 2
2021-10-19 23:49:22,484:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7559)
2021-10-19 23:49:22,484:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:22,612:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:22,612:INFO:Creating metrics dataframe
2021-10-19 23:49:22,636:INFO:Initializing Gradient Boosting Classifier
2021-10-19 23:49:22,636:INFO:Total runtime is 0.14021250406901042 minutes
2021-10-19 23:49:22,645:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:22,645:INFO:Initializing create_model()
2021-10-19 23:49:22,645:INFO:create_model(estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:22,645:INFO:Checking exceptions
2021-10-19 23:49:22,645:INFO:Importing libraries
2021-10-19 23:49:22,645:INFO:Copying training dataset
2021-10-19 23:49:22,646:INFO:Defining folds
2021-10-19 23:49:22,646:INFO:Declaring metric variables
2021-10-19 23:49:22,654:INFO:Importing untrained model
2021-10-19 23:49:22,662:INFO:Gradient Boosting Classifier Imported succesfully
2021-10-19 23:49:22,678:INFO:Starting cross validation
2021-10-19 23:49:22,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:23,090:INFO:Calculating mean and std
2021-10-19 23:49:23,092:INFO:Creating metrics dataframe
2021-10-19 23:49:23,097:INFO:Uploading results into container
2021-10-19 23:49:23,097:INFO:Uploading model into container now
2021-10-19 23:49:23,097:INFO:create_model_container: 10
2021-10-19 23:49:23,097:INFO:master_model_container: 10
2021-10-19 23:49:23,097:INFO:display_container: 2
2021-10-19 23:49:23,098:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=7559, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2021-10-19 23:49:23,098:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:23,225:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:23,225:INFO:Creating metrics dataframe
2021-10-19 23:49:23,251:INFO:Initializing Linear Discriminant Analysis
2021-10-19 23:49:23,251:INFO:Total runtime is 0.15046665271123252 minutes
2021-10-19 23:49:23,260:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:23,260:INFO:Initializing create_model()
2021-10-19 23:49:23,260:INFO:create_model(estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:23,260:INFO:Checking exceptions
2021-10-19 23:49:23,260:INFO:Importing libraries
2021-10-19 23:49:23,260:INFO:Copying training dataset
2021-10-19 23:49:23,261:INFO:Defining folds
2021-10-19 23:49:23,261:INFO:Declaring metric variables
2021-10-19 23:49:23,269:INFO:Importing untrained model
2021-10-19 23:49:23,277:INFO:Linear Discriminant Analysis Imported succesfully
2021-10-19 23:49:23,293:INFO:Starting cross validation
2021-10-19 23:49:23,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:23,348:INFO:Calculating mean and std
2021-10-19 23:49:23,349:INFO:Creating metrics dataframe
2021-10-19 23:49:23,354:INFO:Uploading results into container
2021-10-19 23:49:23,355:INFO:Uploading model into container now
2021-10-19 23:49:23,355:INFO:create_model_container: 11
2021-10-19 23:49:23,355:INFO:master_model_container: 11
2021-10-19 23:49:23,355:INFO:display_container: 2
2021-10-19 23:49:23,355:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2021-10-19 23:49:23,355:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:23,481:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:23,482:INFO:Creating metrics dataframe
2021-10-19 23:49:23,507:INFO:Initializing Extra Trees Classifier
2021-10-19 23:49:23,507:INFO:Total runtime is 0.15473067760467532 minutes
2021-10-19 23:49:23,515:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:23,516:INFO:Initializing create_model()
2021-10-19 23:49:23,516:INFO:create_model(estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:23,517:INFO:Checking exceptions
2021-10-19 23:49:23,517:INFO:Importing libraries
2021-10-19 23:49:23,517:INFO:Copying training dataset
2021-10-19 23:49:23,518:INFO:Defining folds
2021-10-19 23:49:23,518:INFO:Declaring metric variables
2021-10-19 23:49:23,526:INFO:Importing untrained model
2021-10-19 23:49:23,535:INFO:Extra Trees Classifier Imported succesfully
2021-10-19 23:49:23,551:INFO:Starting cross validation
2021-10-19 23:49:23,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:24,384:INFO:Calculating mean and std
2021-10-19 23:49:24,385:INFO:Creating metrics dataframe
2021-10-19 23:49:24,390:INFO:Uploading results into container
2021-10-19 23:49:24,390:INFO:Uploading model into container now
2021-10-19 23:49:24,391:INFO:create_model_container: 12
2021-10-19 23:49:24,391:INFO:master_model_container: 12
2021-10-19 23:49:24,391:INFO:display_container: 2
2021-10-19 23:49:24,391:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7559, verbose=0,
                     warm_start=False)
2021-10-19 23:49:24,391:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:24,518:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:24,519:INFO:Creating metrics dataframe
2021-10-19 23:49:24,545:INFO:Initializing Extreme Gradient Boosting
2021-10-19 23:49:24,545:INFO:Total runtime is 0.1720292170842489 minutes
2021-10-19 23:49:24,553:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:24,554:INFO:Initializing create_model()
2021-10-19 23:49:24,554:INFO:create_model(estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:24,554:INFO:Checking exceptions
2021-10-19 23:49:24,554:INFO:Importing libraries
2021-10-19 23:49:24,554:INFO:Copying training dataset
2021-10-19 23:49:24,555:INFO:Defining folds
2021-10-19 23:49:24,555:INFO:Declaring metric variables
2021-10-19 23:49:24,563:INFO:Importing untrained model
2021-10-19 23:49:24,571:INFO:Extreme Gradient Boosting Imported succesfully
2021-10-19 23:49:24,587:INFO:Starting cross validation
2021-10-19 23:49:24,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:25,610:INFO:Calculating mean and std
2021-10-19 23:49:25,612:INFO:Creating metrics dataframe
2021-10-19 23:49:25,619:INFO:Uploading results into container
2021-10-19 23:49:25,620:INFO:Uploading model into container now
2021-10-19 23:49:25,620:INFO:create_model_container: 13
2021-10-19 23:49:25,620:INFO:master_model_container: 13
2021-10-19 23:49:25,620:INFO:display_container: 2
2021-10-19 23:49:25,622:INFO:XGBClassifier(base_score=None, booster='gbtree', colsample_bylevel=None,
              colsample_bynode=None, colsample_bytree=None,
              enable_categorical=False, gamma=None, gpu_id=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_delta_step=None, max_depth=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, random_state=7559,
              reg_alpha=None, reg_lambda=None, scale_pos_weight=None,
              subsample=None, tree_method='auto', use_label_encoder=True,
              validate_parameters=None, verbosity=0)
2021-10-19 23:49:25,622:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:25,772:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:25,772:INFO:Creating metrics dataframe
2021-10-19 23:49:25,799:INFO:Initializing Light Gradient Boosting Machine
2021-10-19 23:49:25,799:INFO:Total runtime is 0.192926303545634 minutes
2021-10-19 23:49:25,808:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:25,809:INFO:Initializing create_model()
2021-10-19 23:49:25,809:INFO:create_model(estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:25,809:INFO:Checking exceptions
2021-10-19 23:49:25,809:INFO:Importing libraries
2021-10-19 23:49:25,809:INFO:Copying training dataset
2021-10-19 23:49:25,810:INFO:Defining folds
2021-10-19 23:49:25,810:INFO:Declaring metric variables
2021-10-19 23:49:25,818:INFO:Importing untrained model
2021-10-19 23:49:25,826:INFO:Light Gradient Boosting Machine Imported succesfully
2021-10-19 23:49:25,843:INFO:Starting cross validation
2021-10-19 23:49:25,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:27,880:INFO:Calculating mean and std
2021-10-19 23:49:27,882:INFO:Creating metrics dataframe
2021-10-19 23:49:27,890:INFO:Uploading results into container
2021-10-19 23:49:27,890:INFO:Uploading model into container now
2021-10-19 23:49:27,890:INFO:create_model_container: 14
2021-10-19 23:49:27,890:INFO:master_model_container: 14
2021-10-19 23:49:27,891:INFO:display_container: 2
2021-10-19 23:49:27,892:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7559, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2021-10-19 23:49:27,892:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:28,055:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:28,055:INFO:Creating metrics dataframe
2021-10-19 23:49:28,084:INFO:Initializing CatBoost Classifier
2021-10-19 23:49:28,084:INFO:Total runtime is 0.23100971380869553 minutes
2021-10-19 23:49:28,092:INFO:SubProcess create_model() called ==================================
2021-10-19 23:49:28,093:INFO:Initializing create_model()
2021-10-19 23:49:28,093:INFO:create_model(estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC90D9FA0>, kwargs={})
2021-10-19 23:49:28,093:INFO:Checking exceptions
2021-10-19 23:49:28,093:INFO:Importing libraries
2021-10-19 23:49:28,093:INFO:Copying training dataset
2021-10-19 23:49:28,094:INFO:Defining folds
2021-10-19 23:49:28,094:INFO:Declaring metric variables
2021-10-19 23:49:28,102:INFO:Importing untrained model
2021-10-19 23:49:28,111:INFO:CatBoost Classifier Imported succesfully
2021-10-19 23:49:28,127:INFO:Starting cross validation
2021-10-19 23:49:28,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:37,119:INFO:Calculating mean and std
2021-10-19 23:49:37,121:INFO:Creating metrics dataframe
2021-10-19 23:49:37,126:INFO:Uploading results into container
2021-10-19 23:49:37,126:INFO:Uploading model into container now
2021-10-19 23:49:37,126:INFO:create_model_container: 15
2021-10-19 23:49:37,126:INFO:master_model_container: 15
2021-10-19 23:49:37,126:INFO:display_container: 2
2021-10-19 23:49:37,126:INFO:<catboost.core.CatBoostClassifier object at 0x0000024FC8EADA00>
2021-10-19 23:49:37,126:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:37,281:INFO:SubProcess create_model() end ==================================
2021-10-19 23:49:37,282:INFO:Creating metrics dataframe
2021-10-19 23:49:37,330:INFO:Initializing create_model()
2021-10-19 23:49:37,330:INFO:create_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=7559, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, add_to_model_list=True, display=None, kwargs={})
2021-10-19 23:49:37,330:INFO:Checking exceptions
2021-10-19 23:49:37,330:INFO:Importing libraries
2021-10-19 23:49:37,330:INFO:Copying training dataset
2021-10-19 23:49:37,331:INFO:Defining folds
2021-10-19 23:49:37,331:INFO:Declaring metric variables
2021-10-19 23:49:37,331:INFO:Importing untrained model
2021-10-19 23:49:37,331:INFO:Declaring custom model
2021-10-19 23:49:37,332:INFO:Random Forest Classifier Imported succesfully
2021-10-19 23:49:37,332:INFO:Cross validation set to False
2021-10-19 23:49:37,332:INFO:Fitting Model
2021-10-19 23:49:37,568:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=7559, verbose=0,
                       warm_start=False)
2021-10-19 23:49:37,568:INFO:create_models() succesfully completed......................................
2021-10-19 23:49:37,766:INFO:create_model_container: 15
2021-10-19 23:49:37,766:INFO:master_model_container: 15
2021-10-19 23:49:37,766:INFO:display_container: 2
2021-10-19 23:49:37,767:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=-1, oob_score=False, random_state=7559, verbose=0,
                       warm_start=False)
2021-10-19 23:49:37,767:INFO:compare_models() succesfully completed......................................
2021-10-19 23:49:37,775:INFO:Initializing create_model()
2021-10-19 23:49:37,776:INFO:create_model(estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, add_to_model_list=True, display=None, kwargs={'random_state': 2202})
2021-10-19 23:49:37,776:INFO:Checking exceptions
2021-10-19 23:49:37,776:INFO:Preparing display monitor
2021-10-19 23:49:37,795:INFO:Importing libraries
2021-10-19 23:49:37,795:INFO:Copying training dataset
2021-10-19 23:49:37,796:INFO:Defining folds
2021-10-19 23:49:37,796:INFO:Declaring metric variables
2021-10-19 23:49:37,806:INFO:Importing untrained model
2021-10-19 23:49:37,817:INFO:CatBoost Classifier Imported succesfully
2021-10-19 23:49:37,843:INFO:Starting cross validation
2021-10-19 23:49:37,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:49:46,567:INFO:Calculating mean and std
2021-10-19 23:49:46,568:INFO:Creating metrics dataframe
2021-10-19 23:49:46,581:INFO:Finalizing model
2021-10-19 23:49:49,692:INFO:Uploading results into container
2021-10-19 23:49:49,693:INFO:Uploading model into container now
2021-10-19 23:49:49,710:INFO:create_model_container: 16
2021-10-19 23:49:49,710:INFO:master_model_container: 16
2021-10-19 23:49:49,710:INFO:display_container: 3
2021-10-19 23:49:49,711:INFO:<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>
2021-10-19 23:49:49,711:INFO:create_model() succesfully completed......................................
2021-10-19 23:49:49,841:INFO:Initializing evaluate_model()
2021-10-19 23:49:49,842:INFO:evaluate_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-10-19 23:49:49,862:INFO:Initializing plot_model()
2021-10-19 23:49:49,862:INFO:plot_model(fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, save=False, scale=1, system=True)
2021-10-19 23:49:49,862:INFO:Checking exceptions
2021-10-19 23:49:49,863:INFO:Preparing display monitor
2021-10-19 23:49:49,869:INFO:Preloading libraries
2021-10-19 23:49:49,872:INFO:Copying training dataset
2021-10-19 23:49:49,872:INFO:Copying test dataset
2021-10-19 23:49:49,873:INFO:Plot type: parameter
2021-10-19 23:49:49,934:INFO:Visual Rendered Successfully
2021-10-19 23:49:50,062:INFO:plot_model() succesfully completed......................................
2021-10-19 23:49:50,078:INFO:Initializing tune_model()
2021-10-19 23:49:50,078:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-10-19 23:49:50,078:INFO:Checking exceptions
2021-10-19 23:49:50,079:INFO:Preparing display monitor
2021-10-19 23:49:50,098:INFO:Copying training dataset
2021-10-19 23:49:50,099:INFO:Checking base model
2021-10-19 23:49:50,099:INFO:Base model : CatBoost Classifier
2021-10-19 23:49:50,108:INFO:Declaring metric variables
2021-10-19 23:49:50,116:INFO:Defining Hyperparameters
2021-10-19 23:49:50,243:INFO:Tuning with n_jobs=-1
2021-10-19 23:49:50,244:INFO:Initializing RandomizedSearchCV
2021-10-19 23:51:10,061:INFO:Initializing tune_model()
2021-10-19 23:51:10,061:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-10-19 23:51:10,061:INFO:Checking exceptions
2021-10-19 23:51:10,062:INFO:Preparing display monitor
2021-10-19 23:51:10,081:INFO:Copying training dataset
2021-10-19 23:51:10,082:INFO:Checking base model
2021-10-19 23:51:10,082:INFO:Base model : CatBoost Classifier
2021-10-19 23:51:10,091:INFO:Declaring metric variables
2021-10-19 23:51:10,099:INFO:Defining Hyperparameters
2021-10-19 23:51:10,230:INFO:Tuning with n_jobs=-1
2021-10-19 23:51:10,230:INFO:Initializing RandomizedSearchCV
2021-10-19 23:52:35,999:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 10, 'actual_estimator__l2_leaf_reg': 7, 'actual_estimator__eta': 0.15, 'actual_estimator__depth': 4}
2021-10-19 23:52:36,000:INFO:Hyperparameter search completed
2021-10-19 23:52:36,000:INFO:SubProcess create_model() called ==================================
2021-10-19 23:52:36,001:INFO:Initializing create_model()
2021-10-19 23:52:36,001:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC1166E20>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC8EC6910>, kwargs={'random_strength': 0.7, 'n_estimators': 10, 'l2_leaf_reg': 7, 'eta': 0.15, 'depth': 4})
2021-10-19 23:52:36,001:INFO:Checking exceptions
2021-10-19 23:52:36,001:INFO:Importing libraries
2021-10-19 23:52:36,001:INFO:Copying training dataset
2021-10-19 23:52:36,002:INFO:Defining folds
2021-10-19 23:52:36,002:INFO:Declaring metric variables
2021-10-19 23:52:36,014:INFO:Importing untrained model
2021-10-19 23:52:36,015:INFO:Declaring custom model
2021-10-19 23:52:36,027:INFO:CatBoost Classifier Imported succesfully
2021-10-19 23:52:36,054:INFO:Starting cross validation
2021-10-19 23:52:36,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:52:36,329:INFO:Calculating mean and std
2021-10-19 23:52:36,331:INFO:Creating metrics dataframe
2021-10-19 23:52:36,351:INFO:Finalizing model
2021-10-19 23:52:36,426:INFO:Uploading results into container
2021-10-19 23:52:36,426:INFO:Uploading model into container now
2021-10-19 23:52:36,426:INFO:create_model_container: 17
2021-10-19 23:52:36,426:INFO:master_model_container: 17
2021-10-19 23:52:36,426:INFO:display_container: 4
2021-10-19 23:52:36,426:INFO:<catboost.core.CatBoostClassifier object at 0x0000024FFFD58A90>
2021-10-19 23:52:36,426:INFO:create_model() succesfully completed......................................
2021-10-19 23:52:36,571:INFO:SubProcess create_model() end ==================================
2021-10-19 23:52:36,592:INFO:create_model_container: 17
2021-10-19 23:52:36,593:INFO:master_model_container: 17
2021-10-19 23:52:36,593:INFO:display_container: 4
2021-10-19 23:52:36,593:INFO:<catboost.core.CatBoostClassifier object at 0x0000024FFFD58A90>
2021-10-19 23:52:36,593:INFO:tune_model() succesfully completed......................................
2021-10-19 23:52:36,748:INFO:Initializing evaluate_model()
2021-10-19 23:52:36,748:INFO:evaluate_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FFFD58A90>, fold=None, fit_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2021-10-19 23:52:36,772:INFO:Initializing plot_model()
2021-10-19 23:52:36,773:INFO:plot_model(fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x0000024FFFD58A90>, feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, save=False, scale=1, system=True)
2021-10-19 23:52:36,773:INFO:Checking exceptions
2021-10-19 23:52:36,774:INFO:Preparing display monitor
2021-10-19 23:52:36,782:INFO:Preloading libraries
2021-10-19 23:52:36,783:INFO:Copying training dataset
2021-10-19 23:52:36,784:INFO:Copying test dataset
2021-10-19 23:52:36,784:INFO:Plot type: parameter
2021-10-19 23:52:36,795:INFO:Visual Rendered Successfully
2021-10-19 23:52:36,958:INFO:plot_model() succesfully completed......................................
2021-10-19 23:52:36,971:INFO:Initializing tune_model()
2021-10-19 23:52:36,971:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, kwargs={})
2021-10-19 23:52:36,971:INFO:Checking exceptions
2021-10-19 23:52:36,972:INFO:Preparing display monitor
2021-10-19 23:52:36,994:INFO:Copying training dataset
2021-10-19 23:52:36,995:INFO:Checking base model
2021-10-19 23:52:36,995:INFO:Base model : CatBoost Classifier
2021-10-19 23:52:37,005:INFO:Declaring metric variables
2021-10-19 23:52:37,016:INFO:Defining Hyperparameters
2021-10-19 23:52:37,180:INFO:Tuning with n_jobs=-1
2021-10-19 23:52:37,180:INFO:Initializing RandomizedSearchCV
2021-10-19 23:54:00,072:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 10, 'actual_estimator__l2_leaf_reg': 7, 'actual_estimator__eta': 0.15, 'actual_estimator__depth': 4}
2021-10-19 23:54:00,074:INFO:Hyperparameter search completed
2021-10-19 23:54:00,074:INFO:SubProcess create_model() called ==================================
2021-10-19 23:54:00,075:INFO:Initializing create_model()
2021-10-19 23:54:00,076:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC67CB730>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, add_to_model_list=True, display=<pycaret.internal.Display.Display object at 0x0000024FC1166EB0>, kwargs={'random_strength': 0.7, 'n_estimators': 10, 'l2_leaf_reg': 7, 'eta': 0.15, 'depth': 4})
2021-10-19 23:54:00,076:INFO:Checking exceptions
2021-10-19 23:54:00,076:INFO:Importing libraries
2021-10-19 23:54:00,076:INFO:Copying training dataset
2021-10-19 23:54:00,079:INFO:Defining folds
2021-10-19 23:54:00,079:INFO:Declaring metric variables
2021-10-19 23:54:00,103:INFO:Importing untrained model
2021-10-19 23:54:00,103:INFO:Declaring custom model
2021-10-19 23:54:00,124:INFO:CatBoost Classifier Imported succesfully
2021-10-19 23:54:00,154:INFO:Starting cross validation
2021-10-19 23:54:00,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2021-10-19 23:54:00,414:INFO:Calculating mean and std
2021-10-19 23:54:00,416:INFO:Creating metrics dataframe
2021-10-19 23:54:00,438:INFO:Finalizing model
2021-10-19 23:54:00,509:INFO:Uploading results into container
2021-10-19 23:54:00,509:INFO:Uploading model into container now
2021-10-19 23:54:00,510:INFO:create_model_container: 18
2021-10-19 23:54:00,510:INFO:master_model_container: 18
2021-10-19 23:54:00,511:INFO:display_container: 5
2021-10-19 23:54:00,511:INFO:<catboost.core.CatBoostClassifier object at 0x0000024FC6706190>
2021-10-19 23:54:00,511:INFO:create_model() succesfully completed......................................
2021-10-19 23:54:00,811:INFO:SubProcess create_model() end ==================================
2021-10-19 23:54:00,957:INFO:create_model_container: 18
2021-10-19 23:54:00,958:INFO:master_model_container: 18
2021-10-19 23:54:00,958:INFO:display_container: 5
2021-10-19 23:54:00,958:INFO:<catboost.core.CatBoostClassifier object at 0x0000024FC6706190>
2021-10-19 23:54:00,958:INFO:tune_model() succesfully completed......................................
2021-10-19 23:54:01,230:INFO:Initializing predict_model()
2021-10-19 23:54:01,231:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:54:01,231:INFO:Checking exceptions
2021-10-19 23:54:01,232:INFO:Preloading libraries
2021-10-19 23:54:01,232:INFO:Preparing display monitor
2021-10-19 23:54:12,847:INFO:Initializing save_model()
2021-10-19 23:54:12,848:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, model_name=hdp_model_20211019, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-10-19 23:54:12,848:INFO:Adding model into prep_pipe
2021-10-19 23:54:12,868:INFO:hdp_model_20211019.pkl saved in current working directory
2021-10-19 23:54:12,877:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>]],
         verbose=False)
2021-10-19 23:54:12,877:INFO:save_model() successfully completed......................................
2021-10-19 23:55:25,062:INFO:Initializing save_model()
2021-10-19 23:55:25,062:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, model_name=hdp_model_2021-10-19, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-10-19 23:55:25,063:INFO:Adding model into prep_pipe
2021-10-19 23:55:25,078:INFO:hdp_model_2021-10-19.pkl saved in current working directory
2021-10-19 23:55:25,085:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>]],
         verbose=False)
2021-10-19 23:55:25,085:INFO:save_model() successfully completed......................................
2021-10-19 23:56:07,072:INFO:Initializing save_model()
2021-10-19 23:56:07,072:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, model_name=hdp_model_2021-10-19 23:56:07.066580, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-10-19 23:56:07,072:INFO:Adding model into prep_pipe
2021-10-19 23:56:42,825:INFO:Initializing save_model()
2021-10-19 23:56:42,826:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, model_name=hdp_model_19/10/2021 23:56:42, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-10-19 23:56:42,827:INFO:Adding model into prep_pipe
2021-10-19 23:57:07,082:INFO:Initializing save_model()
2021-10-19 23:57:07,083:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, model_name=hdp_model_19-10-2021 23:57:07, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-10-19 23:57:07,083:INFO:Adding model into prep_pipe
2021-10-19 23:57:52,064:INFO:Initializing save_model()
2021-10-19 23:57:52,065:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, model_name=hdp_model_19/10/2021 23:57:52, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-10-19 23:57:52,065:INFO:Adding model into prep_pipe
2021-10-19 23:58:07,835:INFO:Initializing save_model()
2021-10-19 23:58:07,836:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>, model_name=hdp_model_19-10-2021 23-58-07, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2021-10-19 23:58:07,837:INFO:Adding model into prep_pipe
2021-10-19 23:58:07,857:INFO:hdp_model_19-10-2021 23-58-07.pkl saved in current working directory
2021-10-19 23:58:07,865:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=[],
                                      target='HeartDisease',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric...
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000024FC68FD2B0>]],
         verbose=False)
2021-10-19 23:58:07,865:INFO:save_model() successfully completed......................................
2021-10-19 23:59:06,856:INFO:Initializing load_model()
2021-10-19 23:59:06,856:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-19 23:59:11,003:INFO:Initializing predict_model()
2021-10-19 23:59:11,004:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='HeartDisease')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent...
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='HeartDisease')),
                ('fix_perfect', Remove_100(target='HeartDisease')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000018ADC368F10>]]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None)
2021-10-19 23:59:11,007:INFO:Checking exceptions
2021-10-19 23:59:11,007:INFO:Preloading libraries
2021-10-20 10:11:28,840:INFO:Initializing load_model()
2021-10-20 10:11:28,840:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:19:30,156:INFO:Initializing load_model()
2021-10-20 10:19:30,157:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:20:08,912:INFO:Initializing load_model()
2021-10-20 10:20:08,913:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:21:43,973:INFO:Initializing load_model()
2021-10-20 10:21:43,973:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:22:20,067:INFO:Initializing load_model()
2021-10-20 10:22:20,068:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:22:47,671:INFO:Initializing load_model()
2021-10-20 10:22:47,672:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:31:52,818:INFO:Initializing load_model()
2021-10-20 10:31:52,818:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:32:32,665:INFO:Initializing load_model()
2021-10-20 10:32:32,666:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:35:20,985:INFO:Initializing load_model()
2021-10-20 10:35:20,986:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 10:36:02,179:INFO:Initializing load_model()
2021-10-20 10:36:02,180:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 14:58:34,123:INFO:Initializing load_model()
2021-10-20 14:58:34,124:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 14:59:18,067:INFO:Initializing load_model()
2021-10-20 14:59:18,068:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
2021-10-20 15:29:59,486:INFO:Initializing load_model()
2021-10-20 15:29:59,486:INFO:load_model(model_name=hdp_model_19-10-2021 23-58-07, platform=None, authentication=None, verbose=True)
